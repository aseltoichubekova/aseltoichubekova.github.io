<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>http://localhost:1313/post/post/</link>
      <atom:link href="http://localhost:1313/post/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>http://localhost:1313/post/post/</link>
    </image>
    
    <item>
      <title>Пост по прошедшей неделе неделе, 9-16 марта</title>
      <link>http://localhost:1313/post/post/post1/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post/post1/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;libr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;как-прошла-моя-неделя&#34;&gt;Как прошла моя неделя?&lt;/h1&gt;
&lt;h2 id=&#34;понедельник&#34;&gt;Понедельник&lt;/h2&gt;
&lt;p&gt;Моя неделя нчалась довольно хорошо, в понедельник у меня начался пост,так как наступил священный месяц Рамадан. Я проснулась на рассвете, чтобы покушать перед постом, но и конечно пошла обратно спать. У нас было 2 пары, по дискретной математеке и по архитектуре компьютера. После у меня была пара по русскому языку, где было познавательне мероприятие, посвященная масленнице. Я узнала много нового и нас угостили блинами. В этот день интересных событий больше не было.&lt;/p&gt;
&lt;h2 id=&#34;вторник&#34;&gt;Вторник&lt;/h2&gt;
&lt;p&gt;По вторникам у нас только одна пара по физкультуре, я хожу на бадбинтон. Но на этой неделе у нас была лыжная подготовка и я впервый раз каталась на лыжах. Это было весело! Ну на этом веселье заканчивается и оставшийся день я провела за учебой, изучая программирование и математику.&lt;/p&gt;
&lt;h2 id=&#34;среда&#34;&gt;Среда&lt;/h2&gt;
&lt;p&gt;Среда - мой любимый день недеели, так как у нас с утра две пары по матанализу и дискретной математике и к 12 часам мы уже свободны.Весь свой день я посвятила выполнению лабораторной работы по компьютерному практикуму. А также в этот день приехала долгожданная посылка с Кыргызстана. Я была очень рада, распаковывач посылку. Мои сестра положили очень милые открытки, что мне стало на душе так тепло и приятно.&lt;/p&gt;
&lt;h2 id=&#34;четверг&#34;&gt;Четверг&lt;/h2&gt;
&lt;p&gt;В четверг я весь день провела в университете, а точнее с 9 утра до 6 вечера, у меня было 5 пар. К вечеру я вернулась уставшая, но немнго отдохнув села за выполнения лабораторной работы по архитектуре компьютера.&lt;/p&gt;
&lt;h2 id=&#34;пятница&#34;&gt;Пятница&lt;/h2&gt;
&lt;p&gt;По пятницам у меня две пары по немуцкому и по истории. Я посидела на лекции по истории, а потом пошла на немецкий язык, где у нам дали интересное задание написать рестаранам в Германии и зарезервировать столик на нескольких персон. Главной задачей было получить ответ. Мы вместе с преподавателем написали текст и я отправила его на почту, одного из популярных ресторанов Германии, через несколько часов я получила ответ, так что я на 100% выполнила задание по немецкому. Вечером же у меня было волонтерство, я буду сопровождающей делегации Якутии в ВСОШ, нам рассказывали некоторые ммоменты, которые мы должны знать. И уже в понедельник я встречаю свою делегацию, я приятно взволнована и настроена оптимистично. Жду не дождусь следующей недели, чтобы приступить к своей работе, как сопровождающая команды.&lt;/p&gt;
&lt;h2 id=&#34;суббота&#34;&gt;Суббота&lt;/h2&gt;
&lt;p&gt;Сегодня суббота, и с утра я доделываю лабораторные работы, чтобы успеть к дедлайну. После я собираюсь поехать к сестре и провести там свои вызодные. Я очень рада, что каждая неделя проходит интересно и продуктивно!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>http://localhost:1313/post/post/post-2/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post/post-2/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;libr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;система-контроля-версий-version-control-system&#34;&gt;Система контроля версий (Version Control System)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Система контроля версий&lt;/strong&gt; (Version Control System)– это инструмент, который используется для отслеживания, внесения и управления изменениями в программном коде. Это также можно назвать просто контролем версий.&lt;/p&gt;
&lt;p&gt;Системы контроля версий помогает разработчикам сохранять изменения, внесенные в файл, на разных этапах, чтобы и они сами, и их коллеги могли их увидеть позже.&lt;/p&gt;
&lt;p&gt;Существует три типа систем контроля версий:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Локальные системы контроля версий \&lt;/li&gt;
&lt;li&gt;Централизованные системы контроля версий \&lt;/li&gt;
&lt;li&gt;Распределенные системы контроля версий.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;что-такое-git&#34;&gt;Что такое Git?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; – это бесплатная распределенная система контроля версий с открытым исходным кодом, которую можно использовать для отслеживания изменений в ваших файлах. В Git можно работать над всеми типами и размерами проектов.&lt;/p&gt;
&lt;p&gt;С помощью Git вы можете добавлять изменения в свой код, а затем фиксировать их (или сохранять), когда это необходимо. Это означает, что у вас есть возможность вернуться к ранее внесенным изменениям. Git работает рука об руку с GitHub.&lt;/p&gt;
&lt;h2 id=&#34;что-такое-github&#34;&gt;Что такое GitHub?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt; – это веб-интерфейс, в котором можно хранить свои репозитории Git, а также эффективно отслеживать и управлять своими изменениями. С его помощью разные разработчики имеют доступ к коду одного проекта. У вас есть возможность вносить свои собственные изменения в проект одновременно с другими разработчиками.&lt;/p&gt;
&lt;p&gt;Например, если вы вдруг допустили какую-то ошибку во время внесения изменений, вы можете легко вернуться к предыдущему этапу, где ошибки еще нет.&lt;/p&gt;
&lt;h2 id=&#34;принципы-работы-с-git&#34;&gt;Принципы работы с Git.&lt;/h2&gt;
&lt;p&gt;Принципы работы с Git
При работе с Git в среде разработчиков принято руководствоваться тремя принципами:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Регулярно коммитить ― сохранять изменения в Git. Такой подход позволит сохранять более подробную историю версий и быстро замечать ошибки в коде.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создавать новые ветки. Они позволяют легко управлять изменениями, особенно параллельными. Лучше создать ещё одну ветку, чем что-то испортить в старой.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Чётко и лаконично описывать коммиты. Изменения кода, которые отправляются в Git, обязательно должны содержать пояснения и комментарии по добавленным правкам, доработкам и изменениям. Это значительно облегчает совместную работу и помогает быстрее разбираться в своем старом коде.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;основные-команды-git&#34;&gt;Основные команды Git&lt;/h2&gt;
&lt;p&gt;Контроль версии Git — представляет собой набор программ командной строки, это
распределенная система контроля версий, что означает, что каждый разработчик имеет свою
собственную копию репозитория с полной историей изменений. Рассмотрим основные
команды для работы с Git.&lt;/p&gt;
&lt;p&gt;Есть несколько основных команд Git, которые должен знать каждый разработчик:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git config - эта команда используется для того, чтобы установить имя пользователя, адрес электронной почты и ветку пользователя, чтобы определить, кто зафиксировал изменения при работе над проектом. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git init - эта команда используется для того, чтобы запустить Git в своем проекте для отслеживания изменений, внесенных в проект. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git remote add origin -  установит источник для нашего репозитория, где хранить наш код в облаке. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git add - эта команда добавляет ваш файл в промежуточную область (staging area). \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git commit - эта команда фиксирует любой файл, который был добавлен с помощью команды git add, а также все файлы в промежуточной области. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git clone - эта команда используется для того, чтобы скопировать существующий репозиторий в другую область из одного места в другое. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git push - эта команда используется для того, чтобы загрузить/отправить файлы из локального репозитория/хранилища в другое хранилище, например, в удаленное, такое как GitHub. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git rm - эта команда используется для того, чтобы удалить файл из рабочего репозитория. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git branch - эта команда используется для того, чтобы проверить текущую ветку, над который вы работаете, main или master. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git diff - Git покажет вам разницу между кодом, который у вас есть сейчас, и кодом, когда он был сохранен в последний раз. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git log - мы можем просмотреть сделанные нами коммиты. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git checkout - вернуться и увидеть изменения в нашем коде из предыдущего коммита. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git merge - возьмет все коммиты, которые вы сделали в этой ветке, и вставит их в основную ветку, сохранив вашу работу. \&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git status – посмотреть статус коммитов (их количество, внесенные изменения).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
